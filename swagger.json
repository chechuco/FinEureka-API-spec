{
  "swagger" : "2.0",
  "info" : {
    "description" : "FinEureka, a financial products navigator - REST API especification",
    "version" : "1.0.0",
    "title" : "FinEureka",
    "contact" : {
      "email" : "josechu.carballedo@gmail.com"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/chechuco/FinEureka/1.0.0",
  "tags" : [ {
    "name" : "productos",
    "description" : "Financial products"
  }, {
    "name" : "users",
    "description" : "Operations about users"
  }, {
    "name" : "claseActivo_1",
    "description" : "Asset classes"
  }, {
    "name" : "divisas",
    "description" : "Currencies"
  }, {
    "name" : "vehiculos",
    "description" : "Financial vehicles"
  }, {
    "name" : "gradoLiquidez",
    "description" : "Product liquidity"
  }, {
    "name" : "indices",
    "description" : "Benchmarks"
  }, {
    "name" : "categorias_Morningstar",
    "description" : "Morningstar category"
  }, {
    "name" : "gestoras",
    "description" : "Management company"
  }, {
    "name" : "updatedInfo",
    "description" : "Information about a product updated by users"
  }, {
    "name" : "updatedInfoCategory",
    "description" : "Kind of information updated by an user about a product"
  }, {
    "name" : "productOwners",
    "description" : "The users that registered every product"
  }, {
    "name" : "tags",
    "description" : "Tags applied by users to products"
  }, {
    "name" : "livedProdNum",
    "description" : "Number of products registered by every user, and not deleted ('lived' products by user)"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/products" : {
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Add a new product",
        "description" : "",
        "operationId" : "addProduct",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Financial product objct to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Productos"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "fineureka_auth" : [ "write:productos" ]
        } ]
      }
    },
    "/products/findByStatus" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Finds products by opinion status",
        "description" : "Multiple status values can be provided with comma separated strings",
        "operationId" : "findProductsByStatus",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values that need to be considered for filter",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "favorite", "discarded", "follow-up", "unknown or not rated" ],
            "default" : "unknown or not rated"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Productos"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "fineureka_auth" : [ "read:productos" ]
        } ]
      }
    },
    "/products/findByTags" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Finds Products by tags",
        "description" : "Muliple tags can be provided with comma separated strings",
        "operationId" : "findProductsByTags",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "tags",
          "in" : "query",
          "description" : "Tags to filter by",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Productos"
              }
            }
          },
          "400" : {
            "description" : "Invalid tag value"
          }
        },
        "security" : [ {
          "fineureka_auth" : [ "write:productos", "read:productos" ]
        } ],
        "deprecated" : true
      }
    },
    "/products/{idProducto}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Find product by ID",
        "description" : "Returns a single product",
        "operationId" : "getProductById",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "idProducto",
          "in" : "path",
          "description" : "ID of product to return",
          "required" : true,
          "type" : "string",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Productos"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Updates a product with form data",
        "description" : "",
        "operationId" : "updateProduct",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "idProducto",
          "in" : "path",
          "description" : "ID of product to be updated",
          "required" : true,
          "type" : "string",
          "format" : "int64"
        }, {
          "name" : "nombreproducto",
          "in" : "formData",
          "description" : "Updated name of the product",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "opinion_estado",
          "in" : "formData",
          "description" : "Updated opinion status of the product",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "fineureka_auth" : [ "write:productos", "read:productos" ]
        } ]
      },
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "Deletes a product",
        "description" : "",
        "operationId" : "deleteProduct",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "idProducto",
          "in" : "path",
          "description" : "Product id to delete",
          "required" : true,
          "type" : "string",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          }
        },
        "security" : [ {
          "fineureka_auth" : [ "write:productos", "read:productos" ]
        } ]
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Users"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/createWithArray" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Creates list of users with given input array",
        "description" : "",
        "operationId" : "createUsersWithArrayInput",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of user object",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Users"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/createWithList" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Creates list of users with given input array",
        "description" : "",
        "operationId" : "createUsersWithListInput",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of user object",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Users"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/login" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "description" : "",
        "operationId" : "loginUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : {
              "X-Rate-Limit" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "calls per hour allowed by the user"
              },
              "X-Expires-After" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "date in UTC when token expires"
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "description" : "",
        "operationId" : "logoutUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{username}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by user name",
        "description" : "",
        "operationId" : "getUserByName",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing. ",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Users"
            }
          },
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Users"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid user supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "fineureka_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:productos" : "modify products in your account",
        "read:productos" : "read your products"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "Productos" : {
      "type" : "object",
      "required" : [ "claseActivo1", "descripcion", "divisa", "kid_niveles", "kid_riesgo", "nombreProducto", "productId", "vehiculo" ],
      "properties" : {
        "productId" : {
          "type" : "string"
        },
        "isin" : {
          "type" : "string"
        },
        "tickerBL" : {
          "type" : "string"
        },
        "nombreProducto" : {
          "type" : "string"
        },
        "claseActivo1" : {
          "type" : "integer"
        },
        "vehiculo" : {
          "type" : "integer"
        },
        "divisa" : {
          "type" : "string"
        },
        "gradoLiquidez" : {
          "type" : "integer"
        },
        "esComplejo" : {
          "type" : "boolean"
        },
        "bmk_gestora" : {
          "type" : "string"
        },
        "bmk_morningstar" : {
          "type" : "string"
        },
        "cat_morningstar" : {
          "type" : "string"
        },
        "gestora" : {
          "type" : "integer"
        },
        "ucits" : {
          "type" : "boolean"
        },
        "reparto" : {
          "type" : "boolean"
        },
        "noTraspasable" : {
          "type" : "boolean"
        },
        "ter" : {
          "type" : "number"
        },
        "kid_riesgo" : {
          "type" : "integer"
        },
        "kid_niveles" : {
          "type" : "integer"
        },
        "opinion_estado" : {
          "type" : "integer",
          "description" : "opinión del usuario"
        },
        "descripcion" : {
          "type" : "string"
        },
        "goodFor" : {
          "type" : "string"
        },
        "bewareOf" : {
          "type" : "string"
        },
        "fechaAlta" : {
          "type" : "integer",
          "format" : "date-time",
          "example" : 20161229
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Tags"
          }
        }
      },
      "xml" : {
        "name" : "Productos"
      }
    },
    "Users" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "fechaAlta" : {
          "type" : "integer",
          "format" : "date-time",
          "example" : 20161229
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Status"
        }
      },
      "xml" : {
        "name" : "Users"
      }
    },
    "Tags" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "idProducto" : {
          "type" : "string"
        },
        "idUser" : {
          "type" : "integer"
        },
        "tag" : {
          "type" : "string"
        },
        "fecha" : {
          "type" : "integer",
          "format" : "date-time",
          "example" : 20161229
        }
      },
      "xml" : {
        "name" : "Tags"
      }
    }
  }
}